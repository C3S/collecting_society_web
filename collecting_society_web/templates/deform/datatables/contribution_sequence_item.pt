<div tal:omit-tag="field.widget.hidden"
     tal:define="hidden hidden|field.widget.hidden;
                 error_class error_class|field.widget.error_class;
                 description description|field.description;
                 title title|field.title;
                 oid oid|field.oid"
     class="deform-sequence-item ${field.error and error_class or ''}"
     i18n:domain="deform">

    ${field.start_mapping()}
    <div tal:repeat="child field.children"
         tal:replace="structure child.render_template(field.widget.item_template)" >
    </div>     
    ${field.end_mapping()}

    <tal:errors condition="field.error and not hidden"
                define="errstr 'error-%s' % oid"
                repeat="msg field.error.messages()">
        <p tal:condition="msg"
           id="${errstr if repeat.msg.index==0 else '%s-%s' % (errstr, repeat.msg.index)}"
           class="${error_class} help-block"
           i18n:translate="">${msg}</p>
    </tal:errors>

    <script class="datatable_sequence_item_script">
        $(document).ready(function() {
            var form = $(".cs-modal-create .deform-sequence-item");
            var contribution = $('.item-contribution_type').first();
            var performance = $('.item-performance').first();
            var role = $('.item-role').first();
            var cs = $('.item-collecting_society').first();
            var nrs = $('.item-neighbouring_rights_society').first();
            contribution.change(function() {
                var selected = contribution
                    .find("select")
                    .children(":selected")
                    .first();
                switch(selected.attr('value')) {
                    case 'performance':
                        performance.show();
                        cs.hide();
                        nrs.show();
                        performance.trigger('change');
                        break;
                    case 'composition':
                        performance.hide();
                        cs.hide();
                        nrs.hide();
                        role.show();
                        break;
                    case 'text':
                        performance.hide();
                        cs.show();
                        nrs.hide();
                        role.hide();
                        break;
                }
            });
            performance.change(function() {
                var selected = performance
                    .find("select")
                    .children(":selected")
                    .first();
                switch(selected.attr('value')) {
                    case 'recording':
                        role.show();
                        break;
                    default:
                        role.hide();
                }
            });
            performance.trigger('change');
            contribution.trigger('change');
        });
    </script>

</div>
